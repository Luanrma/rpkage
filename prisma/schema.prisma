// schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        BigInt    @id @default(autoincrement())
  name      String
  password  String
  email     String    @unique
  avatar    String?
  type      String
  active    Boolean
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  characters Character[]
  campaignUsers CampaignUser[]
}

model Campaign {
  id          BigInt    @id @default(autoincrement())
  name        String
  description String
  active      Boolean
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  characters  Character[]
  campaignUsers CampaignUser[]
  items       Items[]
  spells      Spells[]
  levelingRules LevelingRule[]
}

model CampaignUser {
  id          BigInt    @id @default(autoincrement())
  userId      BigInt
  campaignId  BigInt
  role        String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  user        User      @relation(fields: [userId], references: [id])
  campaign    Campaign  @relation(fields: [campaignId], references: [id])
}

model Character {
  id         BigInt    @id @default(autoincrement())
  userId     BigInt
  campaignId BigInt?
  name       String
  avatar     String?
  sheet      Json
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  user       User      @relation(fields: [userId], references: [id])
  campaign   Campaign? @relation(fields: [campaignId], references: [id])
  inventory  Inventory?
  equippedItems EquippedItem[]
  equippedSpells EquippedSpell[]
  battleHistory CharacterBattleHistory[]
}

model Inventory {
  id          BigInt     @id @default(autoincrement())
  characterId BigInt     @unique
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  character   Character  @relation(fields: [characterId], references: [id])
  inventoryItems InventoryItem[]
  transactions ItemTransactionHistory[]
}

model InventoryItem {
  id          BigInt    @id @default(autoincrement())
  inventoryId BigInt
  itemsId     BigInt
  quantity    BigInt
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  inventory   Inventory @relation(fields: [inventoryId], references: [id])
  item        Items     @relation(fields: [itemsId], references: [id])
  equippedItem EquippedItem?
}

model Items {
  id          BigInt    @id @default(autoincrement())
  campaingId  BigInt
  type        String
  rarity      String
  description String
  attributes  Json
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  campaign    Campaign  @relation(fields: [campaingId], references: [id])
  inventoryItems InventoryItem[]
  transactionHistories ItemTransactionHistory[]
}

model ItemTransactionHistory {
  id              BigInt    @id @default(autoincrement())
  itemId          BigInt
  inventoryId     BigInt
  fromInventoryId BigInt?
  toInventoryId   BigInt?
  transactionType String
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  item            Items     @relation(fields: [itemId], references: [id])
  inventory       Inventory @relation(fields: [inventoryId], references: [id])
}

model EquippedItem {
  id              BigInt    @id @default(autoincrement())
  characterId     BigInt
  inventoryItemId BigInt @unique
  slot            String
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  character       Character @relation(fields: [characterId], references: [id])
  inventoryItem   InventoryItem @relation(fields: [inventoryItemId], references: [id])
}

model Spells {
  id              BigInt    @id @default(autoincrement())
  campaingId      BigInt
  name            String
  type            String
  description     String?
  specifications  Json
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  campaign        Campaign  @relation(fields: [campaingId], references: [id])
  equippedSpells  EquippedSpell[]
}

model EquippedSpell {
  id          BigInt    @id @default(autoincrement())
  characterId BigInt
  spellId     BigInt
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  character   Character @relation(fields: [characterId], references: [id])
  spell       Spells    @relation(fields: [spellId], references: [id])
}

model CharacterBattleHistory {
  id          BigInt    @id @default(autoincrement())
  characterId BigInt
  sourceType  String
  description String?
  xpGained    Int
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  character   Character @relation(fields: [characterId], references: [id])
}

model LevelingRule {
  id          BigInt    @id @default(autoincrement())
  campaignId  BigInt
  level       BigInt
  requiredXp  BigInt
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  campaign    Campaign  @relation(fields: [campaignId], references: [id])
}
